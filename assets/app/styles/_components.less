//
// Overview page components
// --------------------------------------------------

.components {
  border-left: 3px solid #ccc;
  border-left-style: dotted;
  margin-bottom: 30px;
  .connector {
    display: none;
  }
  &.components-group {
    border-left-style: solid;
    .connector {
      display: inline-block;
      position: absolute;
      top: 48%;
      left: -5px;
      i {
        color: #ccc;
        .rotate(137deg);
        font-size: 9px;
        position: absolute;
      }
      &:before {
        content: '\f111';
        font: normal normal normal 6px/1 FontAwesome;
        display: inline-block;
        color: #fff;
        position: absolute;
        left: 2px;
        top:1px;
      }
    }
    @media (min-width: @screen-sm-min) {
      .osc-object-active {
        .connector {
          i {
            color: @osc-object-active-color;
          }
        }
      }
    }
  }
  .components-panel {
    background-color: #fff;
    border: 1px solid #ddd;
    position: relative;
    .osc-object-highlight();
    .component-label {
      text-transform: uppercase;
      font-size: 11px;
      color: @gray-light;
      + span {
        margin-left: 5px;
      }
      .component-label-details {
        text-transform: none;
      }
    }
    .component-block {
      .flex-display(@display: flex);
      .flex-direction(@direction: row);
      .flex-wrap(@wrap: wrap);
      @media (max-width: @screen-sm-min) {
        /* Switch to vertical layout at small sizes */
        .flex-direction(@direction: column);
      }
      &.pod-container {
        .flex-direction(@direction: row);
      }
      &.pod-template-container {
        margin-top: 5px;
      }
      &.component-meta {
        margin: 4px 0 6px;
      }
      .component {
        @media (min-width: @screen-sm-min) {
          // assign flex properties when >768 for proper layout then .component divs will stack at mobile by default
          .flex(@columns: 1);
        }
        h2,h3 {
          margin: 0 0 5px;
          overflow: hidden;
          text-overflow: ellipsis;
          line-height: 1.3;
          white-space: nowrap;
        }
        &.meta-data {
          @media (min-width: @screen-sm-min) {
            // assign flex properties when >768 for proper layout then .component divs will stack at mobile by default
            .flex(@columns: 1);
          }
          text-align: right;
          line-height: 1.3em;
          .align-self(@align: left);
          color: @gray-light;
          @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max), (max-width: 380px) {
            // block display multiple port mappings at specific widths to prevent breaking of layout, but also prevent wrapping when not needed
            // 380px is the min width at which 2 port mappings can be displayed inline without extending beyond their box, so stack them when viewport is <380
            .port-mappings {
              display: block;
            }
          }
        }

        @media (max-width: @screen-sm-min) {
          &.meta-data {
            /* Left align for vertical layout at small sizes */
            text-align: left;
          }
        }

      }
    }
    &.service {
      border-left-width: 0;
      margin-bottom: 6px;
      padding: 6px 15px 5px;
      .osc-object-highlight();
      &.none {
        background-color: transparent;
      }
    }
    &.deployment-block {
      margin: 0 0 6px 6px;
      padding: 5px 15px;
      &.none {
        background-color: transparent;
        &:after {
          background-color: #ccc;
          top: 50%;
          content: "";
          display: block;
          height: 1px;
          left: -10px;
          position: absolute;
          width: 9px;
        }
      }
    }
  }
}

.pod-template-block {
  text-align: left;
  display: inline-block;
  .flex(@columns: 1 0 auto);
  min-width: 150px;
  max-width: 450px;
  border-radius: 3px;
  margin-bottom: 10px;
  margin-right: 10px;
  overflow: hidden;
  .pod-template {
    border: 1px dotted #ddd;
    border-radius: @border-radius-md;
    padding: 5px 10px;
    h4 {
      margin: 5px 0;
    }
    .fa {
      margin-right: 5px;
      // Make sure the icons are exactly the same width so the labels align.
      width: 13px;
    }
  }
  .pod-template-ports {
    .font-icon-block {
      margin-right: 8px;
    }
  }
}


.builds-block {
  margin-left: 5px;
  .builds {
    margin: 0;
    overflow: hidden;
    .build {
      /* Put a transparent border in place so osc-object-highlight shows selection */
      border: 1px solid transparent;
      .osc-object-highlight();
      border-radius: @border-radius-md;
      padding: 5px;
      position: relative;
      margin: 10px 0 6px;
      text-align: left;
      &:first-child {
        margin-top: 0;
      }
      + .build:after {
        background-color: @connector-color;
        top: -6px;
        content: "";
        display: block;
        height: 1px;
        left: 0;
        right: 0;
        position: absolute;
      }
    }
  }
}

.pod-block {
  display: block;
  .pod-container {
    .flex-display(@display: flex);
    .flex-direction(@direction: row);
    .flex-wrap(@wrap: wrap);
    .justify-content(@justify: flex-start);
    margin-top: 5px;
    &.pod-container-lg {
      .pod {
        width: 70px;
        height: 70px;
      }
    }
    .pod {
      .osc-object-highlight();
      max-width: 450px;
      min-width: 120px;
      background-size: 20px 20px;
      border-radius: @border-radius-md;
      border: 1px solid transparent;
      padding: 10px;
      position: relative;
      margin: 0 10px 10px 0;
      text-align: center;
      -webkit-font-smoothing: antialiased;

      &:last-child {
        // no right margin on the last one so collapse links align properly
        margin-right: 0;
      }

      .pod-status-label {
        &:before, &:after {
          font-family: 'PatternFlyIcons-webfont';
          font-weight: normal;
        }
      }
      &.pod-multiple {
        position: relative;
        cursor: pointer;

        // we always want pod-multiple to get the hover color, event at mobile
        &:hover {
          border-color: @osc-object-hover-color;
        }
        
        .fa-ellipsis-h {
          position: absolute;
          right: 5px;
          bottom: 0;
          font-size: 14px;
          color: #333;
        }
      }
      &.pod-pending {
        background-color: #ececec;
        .striped(@color: rgba(255,255,255,.45); @angle: 45deg);

        &.pod-multiple {
          .pod-multiple-box-shadow(#f4f4f4);
        }
      }
      &.pod-failed {
        background-image: none;
        .pod-status-label {
          position: relative;
          margin-right: -15px;
          &:after, &:before {
            position: absolute;
          }
          &:after {
            color: #fff;
          }
        }
      }
      &.pod-running, &.pod-succeeded {
        background-color: @pod-running-bg;
        background-image: none;

        &.pod-multiple {
          .pod-multiple-box-shadow(#e4f5bc);
        }
      }
      &.pod-failed {
        background-color: @pod-failed-bg;
        border: @pod-failed-border;
        &.pod-multiple {
          box-shadow: 
            0px 0px 0 rgba(0, 0, 0, 0),
            3px 3px 0 #eeecec,
            4px 4px 0 rgb(201, 8, 19),
            6px 6px 0 #eeecec,
            7px 7px 0 rgb(201, 8, 19);        
        }

        .pod-status-label {
          &:after {
            content: "\e608"; // pficon-error-exclamation
            left: -16px;
            top: 0;
          }
          &:before {
            content: "\e609"; // pficon-error-octagon
            color: @brand-danger;
            left: -16px;
            top: 0;
          }
        }
      }
      &.pod-warning, &.pod-unknown {
        background-color: @pod-warning-bg;
        &.pod-multiple {
          .pod-multiple-box-shadow(#f9d67a);
        }
      }
      .pod-text {
        font-family: @font-family-base;
        font-size: 11px;
      }
    }
  }
}

.deployment-well {
  &:not(.active) {
    background-color: white;
  }
  &:not(.detailed) {
    padding-top: 12px;
    padding-bottom: 12px;
    .deployment-summary {
      h3 {
        margin-bottom: 5px;
        text-transform: lowercase;
      }
      .deployment-summary-status {
        font-size: 90%;
        margin-left: 7px;
      }
      .deployment-summary-toggler {
        float: right !important;
        font-size: 80%;
      }
    }
    .deployment-details {
      display: none;
    }
  }
  &.detailed {
    .deployment-summary-status, .deployment-summary-toggler {
      display: none;
    }
  }
}

.popover {
  min-width: 300px;
  font-size: 13px;
  line-height: 1.66667;
}

.build-well, .pod-well, .deployment-well {
  overflow: hidden;
  margin-bottom: 10px;
  .build-detail, .pod-detail, .deployment-detail {
    margin-bottom: 3px;
    .build-detail-label, .pod-detail-label, .deployment-detail-label {
      margin-right: 10px;
    }
  }
  .build-status-button {
    margin-left: 7px;
  }
}

.animate-repeat.ng-move,
.animate-repeat.ng-enter,
.animate-repeat.ng-leave {
  -webkit-transition:all 1s;
  transition:all 1s;
}

.animate-repeat.ng-leave.ng-leave-active,
.animate-repeat.ng-move,
.animate-repeat.ng-enter {
  opacity:0;
}

.animate-repeat.ng-leave,
.animate-repeat.ng-move.ng-move-active,
.animate-repeat.ng-enter.ng-enter-active {
  opacity:1;
}

/* Angular automatically animates things by creating
   transition periods between elements showing and hiding.
   In some cases we do not want to see both elements at the same time
   so we hide things in the ng-leave state that we have tagged with the
   additional hide-ng-leave class.
 */
.hide-ng-leave.ng-leave {
  display: none;
}

.hide-ng-leave .ng-leave {
  display: none;
}
